#!/bin/bash
set -euo pipefail

# exit with an error message
die() {
	echo "Error: $*" >&2
	exit 1
}

build() {
	docker buildx bake "$@"
}

test() {
	format="${1:-}"
	if [[ -z "$format" ]]; then
		die "you should specify an output format"
	fi
	shift

	name=out/claylinux
	case "$format" in
		files)
			# shellcheck source=/dev/null
			source "${name}"/boot.env
			boot_opts=(-kernel "${name}"/"$KERNEL" -initrd "${name}"/initramfs.img -append "$CMDLINE")
			;;
		raw)
			boot_opts=(-drive "file=${name}.img,format=raw")
			;;
		qcow2)
			boot_opts=(-drive "file=${name}.qcow2,format=qcow2")
			;;
		iso)
			boot_opts=(-drive "file=${name}.iso,media=cdrom")
			;;
		*)
			die "invalid format '$format'"
			;;
	esac

	# build the test OS image
	docker buildx bake test --set test.args.FORMAT="$format" "$@"

	qemu_bin=qemu-system-x86_64
	accelerator=kvm

	# special case for WSL on Microsoft Windows
	if [[ -n "${WSL_DISTRO_NAME:-}" ]]; then
		qemu_bin=${qemu_bin}.exe
		accelerator=whpx,kernel-irqchip=off
	fi

	# machine:
	# - q35 correspond to a modern PC
	# - use the proper accelerator
	"$qemu_bin" \
	-machine q35 \
	-accel ${accelerator} \
	-boot d \
	-m 2G \
	-nodefaults \
	-nographic \
	-serial mon:stdio \
	-netdev user,id=net \
	-device virtio-net,netdev=net \
	-device virtio-rng \
	"${boot_opts[@]}"
}

usage() {
	cat <<-EOF
	Usage: $(basename "$0") COMMAND [...]

	Commands:
	  build [...]    build the docker images for a release
	  test FORMAT    build & run the test OS with qemu
	EOF
}

case "${1:-}" in
	build|test)
		"$@"
		;;
	*)
		usage
		exit 1
		;;
esac
